datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     String   @default("user")
  vendors  Vendor[]
}

model Product {
  id                 String   @id @default(uuid())
  vendorId           String
  vendor             Vendor   @relation(fields: [vendorId], references: [id])
  title              String
  description        String
  price              Float
  compareAtPrice     Float?
  stock              Int
  sku                String?
  barcode            String?
  weight             Float?
  weightUnit         String?
  tags               String[]
  productType        String
  status             String
  inventoryPolicy    String
  fulfillmentService String
  shopifyId          String
  images             Image[]
  variants           Variant[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Variant {
  id                String   @id @default(uuid())
  productId         String
  product           Product  @relation(fields: [productId], references: [id])
  option1           String?
  price             Float
  compareAtPrice    Float?
  stock             Int
  weight            Float?
  weightUnit        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Image {
  id        String   @id @default(uuid())
  url       String
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

model Vendor {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  postcode    String
  location    String
  openingTimes String
  contactInfo String
  latitude    Float
  longitude   Float
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  products    Product[]
  orders      Order[]
  deletionRequests DeletionRequest[]
}

model Customer {
  id     String  @id @default(uuid())
  name   String
  email  String
  orders Order[]
}

model Order {
  id         String   @id @default(uuid())
  customerId String
  vendorId   String
  date       DateTime @default(now())
  total      Float
  status     String
  customer   Customer @relation(fields: [customerId], references: [id])
  vendor     Vendor   @relation(fields: [vendorId], references: [id])
  shopifyId  String
}

model DeletionRequest {
  id       String   @id @default(uuid())
  vendorId String
  reason   String
  status   String   @default("pending")
  vendor   Vendor   @relation(fields: [vendorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
